[[plugins]]
repo = 'mfussenegger/nvim-dap'
# on_cmd = 'DebugModeOn'
# hook_add = '''
# function! DegugModeOn()
#   echo "Debug mode on"
# endfunction
# '''
lua_add = '''
local function keymap(mode, l, r, opt)
  if (not opt) then
    opt = {
      silent = false,
      nowait = false,
      expr = true,
      noremap = true,
      desc = true,
    }
  end
  vim.api.nvim_set_keymap(mode, l, r, opt)
end

keymap('n', '<leader>dc', 'function() require("dap").continue() end')
keymap('n', '<leader>do', 'function() require("dap").step_over() end')
keymap('n', '<leader>di', 'function() require("dap").step_into() end')
keymap('n', '<leader>ds', 'function() require("dap").step_out() end')
keymap('n', '<Leader>db', 'function() require("dap").toggle_breakpoint() end')
keymap('n', '<Leader>dB', 'function() require("dap").set_breakpoint() end')
keymap('n', '<Leader>dp', 'function() require("dap").set_breakpoint(nil, nil, vim.fn.input("Log point message: ")) end')
keymap('n', '<Leader>dr', 'function() require("dap").repl.open() end')
keymap('n', '<Leader>dl', 'function() require("dap").run_last() end')
keymap('n', '<Leader>de', 'function() require("dap").terminate() end')

'''
  # " widgets.centered_float(widgets.scopes)

[plugins.ftplugin]
python = '''
lua << EOF
local dap = require('dap')

dap.adapters.python = function(cb, config) 
  if config.request == 'attach' then
    local port = (config.connect or config).port
    local host = (config.connect or config).host or '127.0.0.1'
    cb({
      type = 'server',
      host = host,
      port = assert(port, '`connect.port` is required for a python `attach` configuration'),
      options = {
        source_filetype = 'python',
      },
    })
  else
    cb({
      type = 'executable',
      command = vim.fn.exepath('python3'),
      args = {'-m', 'debugpy.adapter'},
      options = {
        source_filetype = 'python',
      },
    })
  end
end

dap.configurations.python = {
  {
    type = 'python';
    request = 'launch';
    name = 'Launch file';
    program = '${file}';
    pythonPath = function()
      local cwd = vim.fn.getcwd()
      if vim.fn.executable(cwd .. '/venv/bin/python') == 1 then
        return cwd .. '/venv/bin/python'
      elseif vim.fn.executable(cwd .. '/.venv/bin/python') == 1 then
        return cwd .. '/.venv/bin/python'
      elseif os.getenv('VIRTUAL_ENV') then
        return os.getenv('VIRTUAL_ENV') .. '/bin/python'
      else
        return '/usr/local/bin/python3.11'
      end
    end;
  }
}
EOF
'''

[[plugins]]
repo = "rcarriga/nvim-dap-ui"
lua_add = '''
require("dapui").setup({
  icons = {
    expanded = "▾",
    collapsed = "▸",
  },
  layouts = {
    {
      elements = {
        { id = "watches", size = 0.20 },
        { id = "stacks", size = 0.20 },
        { id = "breakpoints", size = 0.20 },
        { id = "scopes", size = 0.40 },
      },
      size = 64,
      position = "right",
    },
    {
      elements = {
        "repl",
        "console",
      },
      size = 0.20,
      position = "bottom",
    },
  },
  })

vim.keymap.set('n', '<Leader>dt', function()
  require("dapui").toggle()
end)
vim.keymap.set({'n', 'v'}, '<Leader>dh', function()
  require('dapui').eval()
end)
'''
