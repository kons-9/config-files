# manage dein itself
[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  :command Dre :call dein#recache_runtimepath()
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'windwp/nvim-autopairs'
lua_add='''
require("nvim-autopairs").setup()
'''



###################### appearance ############################

# status line
[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
[[plugins]]
repo = 'nvim-lualine/lualine.nvim'
lua_add='''
require('dein.statusline')
'''

# indent
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_auto_colors = 0
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=239
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=237
  let g:indent_guides_guide_size = 1
'''

# Colorscheme

# [[plugins]]
# repo = 'morhetz/gruvbox'
# on_cmd = ['colorscheme gruvbox']

# notify
# [[plugins]]
# repo = "rcarriga/nvim-notify"
# [[plugins]]
# repo = "MunifTanjim/nui.nvim"
# [[plugins]]
# repo = "folke/noice.nvim"
# lua_source = '''
# local noice = require("noice")

# local function myMiniView(pattern, kind)
# 	kind = kind or ""
# 	return {
# 		view = "mini",
# 		filter = {
# 			event = "msg_show",
# 			kind = kind,
# 			find = pattern,
# 		},
# 	}
# end

# noice.setup({
# 	messages = {
# 		view_search = "popup",
# 	},
# 	routes = {
# 		{
# 			view = "notify",
# 			filter = { event = "msg_showmode" },
# 		},
# 		{
# 			filter = {
# 				event = "notify",
# 				warning = true,
# 				find = "failed to run generator.*is not executable",
# 			},
# 			opts = { skip = true },
# 		},
# 		myMiniView("Already at .* change"),
# 		myMiniView("written"),
# 		myMiniView("yanked"),
# 		myMiniView("more lines?"),
# 		myMiniView("fewer lines?"),
# 		myMiniView("fewer lines?", "lua_error"),
# 		myMiniView("change; before"),
# 		myMiniView("change; after"),
# 		myMiniView("line less"),
# 		myMiniView("lines indented"),
# 		myMiniView("No lines in buffer"),
# 		myMiniView("search hit .*, continuing at", "wmsg"),
# 		myMiniView("E486: Pattern not found", "emsg"),
# 	},
# })
# '''

